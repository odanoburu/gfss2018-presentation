# text = as crianças quando nós os vemos
# tree = PhrUtt NoPConj (UttNP (AdvNP (DetCN (DetQuant DefArt NumPl) (UseN child_N)) (SubjS when_Subj (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron we_Pron) (ComplSlash (SlashV2a see_V2) (UsePron they_Pron))))))) NoVoc
1	as	DefArt	DET	Quant	Quant-18	2	det	_	_
2	crianças	child_N	NOUN	N	N-1	0	root	_	_
3	quando	when_Subj	SCONJ	Subj	Subj-0	6	mark	_	_
4	nós	we_Pron	PRON	Pron	Pron-0	6	nsubj	_	_
5	os	they_Pron	PRON	Pron	Pron-2	6	dobj	_	_
6	vemos	see_V2	VERB	V2	V2-4	2	nmod	_	_

# text = eu tenho uma razão de ir
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (SentCN (UseN reason_N) (EmbedVP (UseV go_V)))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	tenho	have_V2	VERB	V2	V2-1	0	root	_	_
3	uma	IndefArt	DET	Quant	Quant-7	4	det	_	_
4	razão	reason_N	NOUN	N	N-0	2	dobj	_	_
5	de	EmbedVP	ADP	SC	SC-1	6	mark	_	_
6	ir	go_V	VERB	V	V-0	4	acl	_	_

# text = eu gosto da regra que os livros são finos
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a like_V2) (DetCN (DetQuant DefArt NumSg) (SentCN (UseN rule_N) (EmbedS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumPl) (UseN book_N)) (UseComp (CompAP (PositA thin_A)))))))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	gosto	like_V2	VERB	V2	V2-1	0	root	_	_
3	da	DefArt	DET	Quant	Quant-8	4	det	_	_
4	regra	rule_N	NOUN	N	N-0	2	dobj	_	_
5	que	EmbedS	PRON	SC	SC-1	9	nsubj	_	_
6	os	DefArt	DET	Quant	Quant-12	7	det	_	_
7	livros	book_N	NOUN	N	N-1	9	nsubj	_	_
8	são	UseComp	VERB	VP	VP-6	9	cop	_	_
9	finos	thin_A	ADJ	A	A-4	4	acl	_	_

# text = eu via o homem que você ama
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a see_V2) (DetCN (DetQuant DefArt NumSg) (RelCN (UseN man_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron youSg_Pron) (SlashV2a love_V2)))))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	via	see_V2	VERB	V2	V2-13	0	root	_	_
3	o	DefArt	DET	Quant	Quant-1	4	det	_	_
4	homem	man_N	NOUN	N	N-0	2	dobj	_	_
5	que	IdRP	PRON	RP	RP-1	7	mark	_	_
6	você	youSg_Pron	PRON	Pron	Pron-0	7	nsubj	_	_
7	ama	love_V2	VERB	V2	V2-3	4	acl	_	_

# text = eu via o livro que você comprava
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a see_V2) (DetCN (DetQuant DefArt NumSg) (RelCN (UseN book_N) (UseRCl (TTAnt TPast ASimul) PPos (RelSlash IdRP (SlashVP (UsePron youSg_Pron) (SlashV2a buy_V2)))))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	via	see_V2	VERB	V2	V2-13	0	root	_	_
3	o	DefArt	DET	Quant	Quant-1	4	det	_	_
4	livro	book_N	NOUN	N	N-0	2	dobj	_	_
5	que	IdRP	PRON	RP	RP-1	7	mark	_	_
6	você	youSg_Pron	PRON	Pron	Pron-0	7	nsubj	_	_
7	comprava	buy_V2	VERB	V2	V2-15	4	acl	_	_

# text = o gato saltava quando o cachorro vinha
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (UseN cat_N)) (AdvVP (UseV jump_V) (SubjS when_Subj (UseCl (TTAnt TPast ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (UseN dog_N)) (UseV come_V)))))))) NoVoc
1	o	DefArt	DET	Quant	Quant-0	2	det	_	_
2	gato	cat_N	NOUN	N	N-0	3	nsubj	_	_
3	saltava	jump_V	VERB	V	V-15	0	root	_	_
4	quando	when_Subj	SCONJ	Subj	Subj-0	7	mark	_	_
5	o	DefArt	DET	Quant	Quant-0	6	det	_	_
6	cachorro	dog_N	NOUN	N	N-0	7	nsubj	_	_
7	vinha	come_V	VERB	V	V-15	3	advmod	_	_

# text = se você sabe quem o fazia , você deve ir
# tree = PhrUtt NoPConj (UttS (ExtAdvS (SubjS if_Subj (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron youSg_Pron) (ComplVQ know_VQ (UseQCl (TTAnt TPast ASimul) PPos (QuestVP whoSg_IP (ComplSlash (SlashV2a do_V2) (UsePron it_Pron)))))))) (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron youSg_Pron) (ComplVV must_VV (UseV go_V)))))) NoVoc
1	se	if_Subj	SCONJ	Subj	Subj-0	3	mark	_	_
2	você	youSg_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
3	sabe	know_VQ	VERB	VQ	VQ-3	9	advmod	_	_
4	quem	whoSg_IP	PRON	IP	IP-0	6	nsubj	_	_
5	o	it_Pron	PRON	Pron	Pron-2	6	dobj	_	_
6	fazia	do_V2	VERB	V2	V2-15	3	ccomp	_	_
7	,	ExtAdvS	PUNCT	S	S-0	9	punct	_	_
8	você	youSg_Pron	PRON	Pron	Pron-0	9	nsubj	_	_
9	deve	must_VV	VERB	VV	VV-3	0	root	_	_
10	ir	go_V	VERB	V	V-0	9	xcomp	_	_

# text = ele estava pronto quando eu o via
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron he_Pron) (AdvVP (UseComp (CompAP (PositA ready_A))) (SubjS when_Subj (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a see_V2) (UsePron he_Pron))))))))) NoVoc
1	ele	he_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
2	estava	UseComp	VERB	VP	VP-15	3	cop	_	_
3	pronto	ready_A	ADJ	A	A-1	0	root	_	_
4	quando	when_Subj	SCONJ	Subj	Subj-0	7	mark	_	_
5	eu	i_Pron	PRON	Pron	Pron-0	7	nsubj	_	_
6	o	he_Pron	PRON	Pron	Pron-2	7	dobj	_	_
7	via	see_V2	VERB	V2	V2-13	3	advmod	_	_

# text = regra inteligentemente correta
# tree = PhrUtt NoPConj (UttCN (AdjCN (AdAP (PositAdAAdj clever_A) (PositA correct_A)) (UseN rule_N))) NoVoc
1	regra	rule_N	NOUN	N	N-0	0	root	_	_
2	inteligentemente	clever_A	ADJ	A	A-6	3	advmod	_	_
3	correta	correct_A	ADJ	A	A-3	1	amod	_	_

# text = menos provavelmente que João
# tree = PhrUtt NoPConj (UttAdv (ComparAdvAdj less_CAdv probable_AS (UsePN john_PN))) NoVoc
1	menos	less_CAdv	ADV	CAdv	CAdv-0	4	advmod	_	_
2	provavelmente	probable_AS	ADJ	A	A-6	4	amod	_	_
3	que	less_CAdv	ADV	CAdv	CAdv-1	4	advmod	_	_
4	João	john_PN	PROPN	PN	PN-0	0	root	_	_

# text = João come carne vermelha
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (ComplSlash (SlashV2a eat_V2) (MassNP (AdjCN (PositA red_A) (UseN meat_N))))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	2	nsubj	_	_
2	come	eat_V2	VERB	V2	V2-3	0	root	_	_
3	carne	meat_N	NOUN	N	N-0	2	dobj	_	_
4	vermelha	red_A	ADJ	A	A-3	3	amod	_	_

# text = João morreu
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres AAnter) PPos (PredVP (UsePN john_PN) (UseV die_V)))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	2	nsubj	_	_
2	morreu	die_V	VERB	V	V-27	0	root	_	_

# text = ele deve ir
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (ComplVV must_VV (UseV go_V))))) NoVoc
1	ele	he_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	deve	must_VV	VERB	VV	VV-3	0	root	_	_
3	ir	go_V	VERB	V	V-0	2	xcomp	_	_

# text = João foi morto
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres AAnter) PPos (PredVP (UsePN john_PN) (PassV2 kill_V2)))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	foi	PassV2	AUX	VP	VP-27	3	aux:pass	_	_
3	morto	kill_V2	VERB	V2	V2-45	0	root	_	_

# text = João era morto
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePN john_PN) (PassV2 kill_V2)))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	era	PassV2	AUX	VP	VP-15	3	aux:pass	_	_
3	morto	kill_V2	VERB	V2	V2-45	0	root	_	_

# text = eu via um gato em um chapéu
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a see_V2) (DetCN (DetQuant IndefArt NumSg) (AdvCN (UseN cat_N) (PrepNP in_Prep (DetCN (DetQuant IndefArt NumSg) (UseN hat_N))))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	via	see_V2	VERB	V2	V2-13	0	root	_	_
3	um	IndefArt	DET	Quant	Quant-1	4	det	_	_
4	gato	cat_N	NOUN	N	N-0	2	dobj	_	_
5	em	IndefArt	DET	Quant	Quant-4	7	det	_	_
6	um	IndefArt	DET	Quant	Quant-4	7	det	_	_
7	chapéu	hat_N	NOUN	N	N-0	4	nmod	_	_

# text = eu via um gato com meus olhos
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (AdvVP (ComplSlash (SlashV2a see_V2) (DetCN (DetQuant IndefArt NumSg) (UseN cat_N))) (PrepNP with_Prep (DetCN (DetQuant (PossPron i_Pron) NumPl) (UseN eye_N))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	via	see_V2	VERB	V2	V2-13	0	root	_	_
3	um	IndefArt	DET	Quant	Quant-1	4	det	_	_
4	gato	cat_N	NOUN	N	N-0	2	dobj	_	_
5	com	with_Prep	ADP	Prep	Prep-0	7	case	_	_
6	meus	i_Pron	PRON	Pron	Pron-24	7	det	_	_
7	olhos	eye_N	NOUN	N	N-1	2	advmod	_	_

# text = ele é casado com ela
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (UseComp (CompAP (ComplA2 married_A2 (UsePron she_Pron))))))) NoVoc
1	ele	he_Pron	PRON	Pron	Pron-0	5	nsubj	_	_
2	é	UseComp	VERB	VP	VP-3	5	cop	_	_
3	casado	married_A2	ADJ	A2	A2-1	5	amod	_	_
4	com	married_A2	ADJ	A2	A2-6	5	amod	_	_
5	ela	she_Pron	PRON	Pron	Pron-5	0	root	_	_

# text = e nós íamos
# tree = PhrUtt (PConjConj and_Conj) (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron we_Pron) (UseV go_V)))) NoVoc
1	e	and_Conj	CONJ	Conj	Conj-1	3	cc	_	_
2	nós	we_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
3	íamos	go_V	VERB	V	V-16	0	root	_	_

# text = tanto os meninos quanto as meninas estão aqui
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (ConjNP both7and_DConj (BaseNP (DetCN (DetQuant DefArt NumPl) (UseN boy_N)) (DetCN (DetQuant DefArt NumPl) (UseN girl_N)))) (UseComp (CompAdv here_Adv))))) NoVoc
1	tanto	both7and_DConj	CONJ	Conj	Conj-0	3	cc	_	_
2	os	DefArt	DET	Quant	Quant-12	3	det	_	_
3	meninos	boy_N	NOUN	N	N-1	8	nsubj	_	_
4	quanto	both7and_DConj	CONJ	Conj	Conj-1	3	cc	_	_
5	as	DefArt	DET	Quant	Quant-18	6	det	_	_
6	meninas	girl_N	NOUN	N	N-1	3	conj	_	_
7	estão	UseComp	VERB	VP	VP-6	8	cop	_	_
8	aqui	here_Adv	ADV	Adv	Adv-0	0	root	_	_

# text = ele diz que você quer nadar
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (ComplVS say_VS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron youSg_Pron) (ComplVV want_VV (UseV swim_V)))))))) NoVoc
1	ele	he_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	diz	say_VS	VERB	VS	VS-3	0	root	_	_
3	que	ComplVS	SCONJ	VP	VP-61	2	mark	_	_
4	você	youSg_Pron	PRON	Pron	Pron-0	5	nsubj	_	_
5	quer	want_VV	VERB	VV	VV-3	2	ccomp	_	_
6	nadar	swim_V	VERB	V	V-0	5	xcomp	_	_

# text = eu estou incerto que ele o fazia
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (UseComp (CompAP (SentAP (PositA uncertain_A) (EmbedS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron he_Pron) (ComplSlash (SlashV2a do_V2) (UsePron it_Pron))))))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
2	estou	UseComp	VERB	VP	VP-1	3	cop	_	_
3	incerto	uncertain_A	ADJ	A	A-1	0	root	_	_
4	que	EmbedS	PRON	SC	SC-2	7	nsubj	_	_
5	ele	he_Pron	PRON	Pron	Pron-0	7	nsubj	_	_
6	o	it_Pron	PRON	Pron	Pron-2	7	dobj	_	_
7	fazia	do_V2	VERB	V2	V2-15	3	acl	_	_

# text = eu tenho quatro mil ovelhas
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot3 (pot1as2 (pot0as1 (pot0 n4)))))))) (UseN sheep_N)))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	tenho	have_V2	VERB	V2	V2-1	0	root	_	_
3	quatro	n4	Digit	Digit	Digit-0	0	root	_	_
4	mil	pot3	Sub1000000	Sub1000000	Sub1000000-1	3	dep	_	_
5	ovelhas	sheep_N	NOUN	N	N-1	2	dobj	_	_

# text = eles desligam a televisão
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron they_Pron) (ComplSlash (SlashV2a switch8off_V2) (DetCN (DetQuant DefArt NumSg) (UseN television_N)))))) NoVoc
1	eles	they_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	desligam	switch8off_V2	VERB	V2	V2-6	0	root	_	_
3	a	DefArt	DET	Quant	Quant-7	4	det	_	_
4	televisão	television_N	NOUN	N	N-0	2	dobj	_	_

# text = João é grande e inteligente
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseComp (CompAP (ConjAP and_Conj (BaseAP (PositA big_A) (PositA clever_A)))))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	é	UseComp	VERB	VP	VP-3	3	cop	_	_
3	grande	big_A	ADJ	A	A-1	0	root	_	_
4	e	and_Conj	CONJ	Conj	Conj-1	3	cc	_	_
5	inteligente	clever_A	ADJ	A	A-1	3	conj	_	_

# text = João é um homem inteligente
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseComp (CompCN (AdjCN (PositA clever_A) (UseN man_N))))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	4	nsubj	_	_
2	é	UseComp	VERB	VP	VP-3	4	cop	_	_
3	um	CompCN	DET	Comp	Comp-2	4	det	_	_
4	homem	man_N	NOUN	N	N-0	0	root	_	_
5	inteligente	clever_A	ADJ	A	A-1	4	amod	_	_

# text = João está da cidade
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseComp (CompAdv (PrepNP from_Prep (DetCN (DetQuant DefArt NumSg) (UseN city_N)))))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	4	nsubj	_	_
2	está	UseComp	VERB	VP	VP-3	4	cop	_	_
3	da	DefArt	DET	Quant	Quant-8	4	det	_	_
4	cidade	city_N	NOUN	N	N-0	0	root	_	_

# text = João é inteligente
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseComp (CompAP (PositA clever_A)))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	é	UseComp	VERB	VP	VP-3	3	cop	_	_
3	inteligente	clever_A	ADJ	A	A-1	0	root	_	_

# text = era hoje
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (ImpersCl (AdvVP UseCopula today_Adv)))) NoVoc
1	era	UseCopula	VP	VP	VP-15	0	root	_	_
2	hoje	today_Adv	ADV	Adv	Adv-0	1	advmod	_	_

# text = que é esse
# tree = PhrUtt NoPConj (UttQS (UseQCl (TTAnt TPres ASimul) PPos (QuestIComp (CompIP whatSg_IP) (DetNP (DetQuant that_Quant NumSg))))) NoVoc
1	que	whatSg_IP	PRON	IP	IP-0	0	root	_	_
2	é	QuestIComp	VERB	QCl	QCl-0	1	cop	_	_
3	esse	that_Quant	DET	Quant	Quant-49	1	nsubj	_	_

# text = estava porque João é inteligente
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (ImpersCl (UseComp (CompAdv (SubjS because_Subj (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseComp (CompAP (PositA clever_A))))))))))) NoVoc
1	estava	UseComp	VERB	VP	VP-15	5	cop	_	_
2	porque	because_Subj	SCONJ	Subj	Subj-0	5	mark	_	_
3	João	john_PN	PROPN	PN	PN-0	5	nsubj	_	_
4	é	UseComp	VERB	VP	VP-3	5	cop	_	_
5	inteligente	clever_A	ADJ	A	A-1	0	root	_	_

# text = João se tornava inteligente
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePN john_PN) (ComplVA become_VA (PositA clever_A))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	se	PredVP	PRON	Cl	Cl-8	3	expl	_	_
3	tornava	become_VA	VERB	VA	VA-15	0	root	_	_
4	inteligente	clever_A	ADJ	A	A-1	3	xcomp	_	_

# text = João está dormindo
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (ProgrVP (UseV sleep_V))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	está	ProgrVP	VERB	VP	VP-3	3	cop	_	_
3	dormindo	sleep_V	VERB	V	V-46	0	root	_	_

# text = há uma vaca na floresta
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (ExistNPAdv (DetCN (DetQuant IndefArt NumSg) (UseN cow_N)) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (UseN forest_N)))))) NoVoc
1	há	ExistNPAdv	AUX	Cl	Cl-0	3	aux	_	_
2	uma	IndefArt	DET	Quant	Quant-7	3	det	_	_
3	vaca	cow_N	NOUN	N	N-0	0	root	_	_
4	na	DefArt	DET	Quant	Quant-10	5	det	_	_
5	floresta	forest_N	NOUN	N	N-0	3	nmod	_	_

# text = que ela fazia é importante
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredSCVP (EmbedQS (UseQCl (TTAnt TPast ASimul) PPos (QuestSlash whatSg_IP (SlashVP (UsePron she_Pron) (SlashV2a do_V2))))) (UseComp (CompAP (PositA important_A)))))) NoVoc
1	que	whatSg_IP	PRON	IP	IP-1	3	dobj	_	_
2	ela	she_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
3	fazia	do_V2	VERB	V2	V2-15	5	csubj	_	_
4	é	UseComp	VERB	VP	VP-3	5	cop	_	_
5	importante	important_A	ADJ	A	A-1	0	root	_	_

# text = que ela dormia era visto por tudo
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredSCVP (EmbedS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron she_Pron) (UseV sleep_V)))) (AdvVP (PassV2 see_V2) (PrepNP by8agent_Prep everything_NP))))) NoVoc
1	que	EmbedS	PRON	SC	SC-0	3	nsubj	_	_
2	ela	she_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
3	dormia	sleep_V	VERB	V	V-15	5	csubj	_	_
4	era	PassV2	AUX	VP	VP-15	5	aux:pass	_	_
5	visto	see_V2	VERB	V2	V2-45	0	root	_	_
6	por	everything_NP	NP	NP	NP-21	5	advmod	_	_
7	tudo	everything_NP	NP	NP	NP-21	5	advmod	_	_

# text = o homem está aqui
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (UseN man_N)) (UseComp (CompAdv here_Adv))))) NoVoc
1	o	DefArt	DET	Quant	Quant-0	2	det	_	_
2	homem	man_N	NOUN	N	N-0	4	nsubj	_	_
3	está	UseComp	VERB	VP	VP-3	4	cop	_	_
4	aqui	here_Adv	ADV	Adv	Adv-0	0	root	_	_

# text = de qual livro você gosta
# tree = PhrUtt NoPConj (UttQS (UseQCl (TTAnt TPres ASimul) PPos (QuestSlash (IdetCN (IdetQuant which_IQuant NumSg) (UseN book_N)) (SlashVP (UsePron youSg_Pron) (SlashV2a like_V2))))) NoVoc
1	de	which_IQuant	DET	IQuant	IQuant-2	3	det	_	_
2	qual	which_IQuant	DET	IQuant	IQuant-2	3	det	_	_
3	livro	book_N	NOUN	N	N-0	5	dobj	_	_
4	você	youSg_Pron	PRON	Pron	Pron-0	5	nsubj	_	_
5	gosta	like_V2	VERB	V2	V2-3	0	root	_	_

# text = todos os meninos estão aqui
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (PredetNP all_Predet (DetCN (DetQuant DefArt NumPl) (UseN boy_N))) (UseComp (CompAdv here_Adv))))) NoVoc
1	todos	all_Predet	DET	Predet	Predet-6	3	det	_	_
2	os	DefArt	DET	Quant	Quant-12	3	det	_	_
3	meninos	boy_N	NOUN	N	N-1	5	nsubj	_	_
4	estão	UseComp	VERB	VP	VP-6	5	cop	_	_
5	aqui	here_Adv	ADV	Adv	Adv-0	0	root	_	_

# text = ela me dava uma maçã
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron she_Pron) (ComplSlash (Slash2V3 give_V3 (UsePron i_Pron)) (DetCN (DetQuant IndefArt NumSg) (UseN apple_N)))))) NoVoc
1	ela	she_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
2	me	i_Pron	PRON	Pron	Pron-11	3	iobj	_	_
3	dava	give_V3	VERB	V3	V3-15	0	root	_	_
4	uma	IndefArt	DET	Quant	Quant-7	5	det	_	_
5	maçã	apple_N	NOUN	N	N-0	3	dobj	_	_

# text = há um gato na casa
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (ExistNPAdv (DetCN (DetQuant IndefArt NumSg) (UseN cat_N)) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (UseN house_N)))))) NoVoc
1	há	ExistNPAdv	AUX	Cl	Cl-0	3	aux	_	_
2	um	IndefArt	DET	Quant	Quant-1	3	det	_	_
3	gato	cat_N	NOUN	N	N-0	0	root	_	_
4	na	DefArt	DET	Quant	Quant-10	5	det	_	_
5	casa	house_N	NOUN	N	N-0	3	nmod	_	_

# text = meninos estavam nadando quando as meninas vinham
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (DetCN (DetQuant IndefArt NumPl) (UseN boy_N)) (AdvVP (ProgrVP (UseV swim_V)) (SubjS when_Subj (UseCl (TTAnt TPast ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumPl) (UseN girl_N)) (UseV come_V)))))))) NoVoc
1	meninos	boy_N	NOUN	N	N-1	3	nsubj	_	_
2	estavam	ProgrVP	AUX	VP	VP-18	3	aux	_	_
3	nadando	swim_V	VERB	V	V-46	0	root	_	_
4	quando	when_Subj	SCONJ	Subj	Subj-0	7	mark	_	_
5	as	DefArt	DET	Quant	Quant-18	6	det	_	_
6	meninas	girl_N	NOUN	N	N-1	7	nsubj	_	_
7	vinham	come_V	VERB	V	V-18	3	advmod	_	_

# text = eu queria comer o
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (ComplVV want_VV (ComplSlash (SlashV2a eat_V2) (UsePron it_Pron)))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	queria	want_VV	VERB	VV	VV-13	0	root	_	_
3	comer	eat_V2	VERB	V2	V2-0	2	xcomp	_	_
4	o	it_Pron	PRON	Pron	Pron-2	3	dobj	_	_

# text = João não é um médico
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PNeg (PredVP (UsePN john_PN) (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN doctor_N))))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	5	nsubj	_	_
2	não	UseComp	ADV	VP	VP-65	5	advmod	_	_
3	é	UseComp	VERB	VP	VP-3	5	cop	_	_
4	um	IndefArt	DET	Quant	Quant-0	5	det	_	_
5	médico	doctor_N	NOUN	N	N-0	0	root	_	_

# text = João não ri
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PNeg (PredVP (UsePN john_PN) (UseV laugh_V)))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	não	UseV	ADV	VP	VP-65	3	advmod	_	_
3	ri	laugh_V	VERB	V	V-3	0	root	_	_

# text = João não via nenhuns animais
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePN john_PN) (ComplSlash (SlashV2a see_V2) (DetCN (DetQuant no_Quant NumPl) (UseN animal_N)))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	não	SlashV2a	ADV	VPSlash	VPSlash-68	3	advmod	_	_
3	via	see_V2	VERB	V2	V2-15	0	root	_	_
4	nenhuns	no_Quant	DET	Quant	Quant-13	5	det	_	_
5	animais	animal_N	NOUN	N	N-1	3	dobj	_	_

# text = a casa do médico
# tree = PhrUtt NoPConj (UttNP (DetCN (DetQuant DefArt NumSg) (PossNP (UseN house_N) (DetCN (DetQuant DefArt NumSg) (UseN doctor_N))))) NoVoc
1	a	DefArt	DET	Quant	Quant-6	2	det	_	_
2	casa	house_N	NOUN	N	N-0	0	root	_	_
3	do	DefArt	DET	Quant	Quant-2	4	det	_	_
4	médico	doctor_N	NOUN	N	N-0	2	nmod	_	_

# text = envie às crianças as maçãs
# tree = PhrUtt NoPConj (UttImpSg PPos (ImpVP (ComplSlash (Slash2V3 send_V3 (DetCN (DetQuant DefArt NumPl) (UseN apple_N))) (DetCN (DetQuant DefArt NumPl) (UseN child_N))))) NoVoc
1	envie	send_V3	VERB	V3	V3-9	0	root	_	_
2	às	DefArt	DET	Quant	Quant-21	3	det	_	_
3	crianças	child_N	NOUN	N	N-1	1	dobj	_	_
4	as	DefArt	DET	Quant	Quant-19	5	det	_	_
5	maçãs	apple_N	NOUN	N	N-1	1	iobj	_	_

# text = o menino tem 6 anos
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (UseN boy_N)) (has_age_VP (NumDigits (IDig D_6)))))) NoVoc
1	o	DefArt	DET	Quant	Quant-0	2	det	_	_
2	menino	boy_N	NOUN	N	N-0	4	nsubj	_	_
3	tem	has_age_VP	VP	VP	VP-3	4	dep	_	_
4	6	D_6	Dig	Dig	Dig-0	0	root	_	_
5	anos	has_age_VP	VP	VP	VP-54	4	dep	_	_

# text = a ciência é importante ela própria
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (UseN science_N)) (SelfAdVVP (UseComp (CompAP (PositA important_A))))))) NoVoc
1	a	DefArt	DET	Quant	Quant-6	2	det	_	_
2	ciência	science_N	NOUN	N	N-0	4	nsubj	_	_
3	é	UseComp	VERB	VP	VP-3	4	cop	_	_
4	importante	important_A	ADJ	A	A-3	0	root	_	_
5	ela	SelfAdVVP	PRON	VP	VP-59	4	obl	_	_
6	própria	SelfAdVVP	DET	VP	VP-59	4	det	_	_

# text = hoje , eu nadava no mar
# tree = PhrUtt NoPConj (UttS (ExtAdvS today_Adv (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (AdvVP (UseV swim_V) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (UseN sea_N)))))))) NoVoc
1	hoje	today_Adv	ADV	Adv	Adv-0	4	advmod	_	_
2	,	ExtAdvS	PUNCT	S	S-0	4	punct	_	_
3	eu	i_Pron	PRON	Pron	Pron-0	4	nsubj	_	_
4	nadava	swim_V	VERB	V	V-13	0	root	_	_
5	no	DefArt	DET	Quant	Quant-4	6	det	_	_
6	mar	sea_N	NOUN	N	N-0	4	advmod	_	_

# text = você deve ler o livro antes de segunda
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron youSg_Pron) (AdvVP (ComplVV must_VV (ComplSlash (SlashV2a read_V2) (DetCN (DetQuant DefArt NumSg) (UseN book_N)))) (PrepNP before_Prep (UsePN (weekdayPN monday_Weekday))))))) NoVoc
1	você	youSg_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	deve	must_VV	VERB	VV	VV-3	0	root	_	_
3	ler	read_V2	VERB	V2	V2-0	2	xcomp	_	_
4	o	DefArt	DET	Quant	Quant-1	5	det	_	_
5	livro	book_N	NOUN	N	N-0	3	dobj	_	_
6	antes	before_Prep	ADP	Prep	Prep-0	8	case	_	_
7	de	UsePN	ADP	NP	NP-9	8	case	_	_
8	segunda	monday_Weekday	Weekday	Weekday	Weekday-0	2	advmod	_	_

# text = João o matava
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePN john_PN) (ComplSlash (SlashV2a kill_V2) (UsePron he_Pron))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	3	nsubj	_	_
2	o	he_Pron	PRON	Pron	Pron-2	3	dobj	_	_
3	matava	kill_V2	VERB	V2	V2-15	0	root	_	_

# text = ele era morto por João
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron he_Pron) (AdvVP (PassV2 kill_V2) (PrepNP by8agent_Prep (UsePN john_PN)))))) NoVoc
1	ele	he_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
2	era	PassV2	AUX	VP	VP-15	3	aux:pass	_	_
3	morto	kill_V2	VERB	V2	V2-45	0	root	_	_
4	por	UsePN	ADP	NP	NP-21	5	case	_	_
5	João	john_PN	PROPN	PN	PN-0	3	advmod	_	_

# text = João comia 3 ovelhas
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePN john_PN) (ComplSlash (SlashV2a eat_V2) (DetCN (DetQuant IndefArt (NumCard (NumDigits (IDig D_3)))) (UseN sheep_N)))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	2	nsubj	_	_
2	comia	eat_V2	VERB	V2	V2-15	0	root	_	_
3	3	D_3	Dig	Dig	Dig-1	0	root	_	_
4	ovelhas	sheep_N	NOUN	N	N-1	2	dobj	_	_

# text = João encontrava quarenta gatos
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePN john_PN) (ComplSlash (SlashV2a find_V2) (DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot1 n4))))))) (UseN cat_N)))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	2	nsubj	_	_
2	encontrava	find_V2	VERB	V2	V2-15	0	root	_	_
3	quarenta	n4	Digit	Digit	Digit-12	0	root	_	_
4	gatos	cat_N	NOUN	N	N-1	2	dobj	_	_

# text = vá à casa
# tree = PhrUtt NoPConj (UttImpSg PPos (ImpVP (AdvVP (UseV go_V) (PrepNP to_Prep (DetCN (DetQuant DefArt NumSg) (UseN house_N)))))) NoVoc
1	vá	go_V	VERB	V	V-9	0	root	_	_
2	à	DefArt	DET	Quant	Quant-9	3	det	_	_
3	casa	house_N	NOUN	N	N-0	1	advmod	_	_

# text = eu amo maçãs vermelhas
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2a love_V2) (DetCN (DetQuant IndefArt NumPl) (AdjCN (PositA red_A) (UseN apple_N))))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	amo	love_V2	VERB	V2	V2-1	0	root	_	_
3	maçãs	apple_N	NOUN	N	N-1	2	dobj	_	_
4	vermelhas	red_A	ADJ	A	A-5	3	amod	_	_

# text = João é um homem inteligente
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA clever_A) (UseN man_N)))))))) NoVoc
1	João	john_PN	PROPN	PN	PN-0	4	nsubj	_	_
2	é	UseComp	VERB	VP	VP-3	4	cop	_	_
3	um	IndefArt	DET	Quant	Quant-0	4	det	_	_
4	homem	man_N	NOUN	N	N-0	0	root	_	_
5	inteligente	clever_A	ADJ	A	A-1	4	amod	_	_

# text = venham aqui , meninos
# tree = PhrUtt NoPConj (UttImpPl PPos (ImpVP (AdvVP (UseV come_V) here_Adv))) (VocNP (DetCN (DetQuant IndefArt NumPl) (UseN boy_N)))
1	venham	come_V	VERB	V	V-12	0	root	_	_
2	aqui	here_Adv	ADV	Adv	Adv-0	1	advmod	_	_
3	,	VocNP	PUNCT	Voc	Voc-0	4	punct	_	_
4	meninos	boy_N	NOUN	N	N-1	1	discourse	_	_

# text = ela rogava João a encontrar seu cachorro
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron she_Pron) (ComplSlash (SlashV2V beg_V2V (ComplSlash (SlashV2a find_V2) (DetCN (DetQuant (PossPron she_Pron) NumSg) (UseN dog_N)))) (UsePN john_PN))))) NoVoc
1	ela	she_Pron	PRON	Pron	Pron-0	2	nsubj	_	_
2	rogava	beg_V2V	VERB	V2V	V2V-15	0	root	_	_
3	João	john_PN	PROPN	PN	PN-0	2	dobj	_	_
4	a	SlashV2V	ADP	VPSlash	VPSlash-60	2	mark	_	_
5	encontrar	find_V2	VERB	V2	V2-0	2	xcomp	_	_
6	seu	she_Pron	PRON	Pron	Pron-22	7	det	_	_
7	cachorro	dog_N	NOUN	N	N-0	5	dobj	_	_

# text = eu o pinto de vermelho
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ComplSlash (SlashV2A paint_V2A (PositA red_A)) (UsePron it_Pron))))) NoVoc
1	eu	i_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
2	o	it_Pron	PRON	Pron	Pron-2	3	dobj	_	_
3	pinto	paint_V2A	VERB	V2A	V2A-1	0	root	_	_
4	de	paint_V2A	VERB	V2A	V2A-48	0	root	_	_
5	vermelho	red_A	ADJ	A	A-1	3	xcomp	_	_

# text = ela se torna muito bela
# tree = PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (ComplVA become_VA (AdAP very_AdA (PositA beautiful_A)))))) NoVoc
1	ela	she_Pron	PRON	Pron	Pron-0	3	nsubj	_	_
2	se	PredVP	PRON	Cl	Cl-0	3	expl	_	_
3	torna	become_VA	VERB	VA	VA-3	0	root	_	_
4	muito	very_AdA	ADV	AdA	AdA-0	5	advmod	_	_
5	bela	beautiful_A	ADJ	A	A-3	3	xcomp	_	_

